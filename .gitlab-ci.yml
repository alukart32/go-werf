stages:
  - build
  - deploy
  - dismiss
  - cleanup

before_script:
  # init werf
  - curl -sSLO https://werf.io/install.sh && chmod +x install.sh
  - ./install.sh --ci
  - source "$(~/bin/trdl use werf 1.2 stable)"
  # set env params for app's annotations or labels
  - export WERF_ADD_ANNOTATION_APPLICATION_NAME="project.werf.io/name=${CI_PROJECT_TITLE}"
  - export WERF_ADD_ANNOTATION_APPLICATION_VERSION="project.werf.io/version=v1.0.0" # ?
  - export WERF_ADD_ANNOTATION_CI_CD_JOB_URL="ci-cd.werf.io/job-url=${CI_JOB_URL}"
  - export WERF_ADD_ANNOTATION_CI_CD_GIT_COMMIT="ci-cd.werf.io/git-commit=${CI_COMMIT_SHORT_SHA}"
  - export WERF_ADD_ANNOTATION_CI_CD_GIT_TAG="ci-cd.werf.io/git-tag=${CI_COMMIT_TAG}"
  - export WERF_ADD_ANNOTATION_CI_CD_GIT_BRANCH="ci-cd.werf.io/git-branch=${CI_COMMIT_REF_SLUG}"

Build and Publish:
  stage: build
  script:
    - werf build
  except: [schedules]
  tags: [werf]

.base_deploy:
  stage: deploy
  script:
    - werf converge --skip-build --set "env_url=$(echo ${CI_ENVIRONMENT_URL})"
  dependencies:
    - Build and Publish
  tags: [werf]

Review:
  stage: deploy
  script:
    - werf converge --skip-build --set "env_url=$(echo ${CI_ENVIRONMENT_URL})"
  environment:
    name: review-${CI_MERGE_REQUEST_ID}
    url: http://${KUBE_URL}
    on_stop: Stop Review
    auto_stop_in: 1 day
  artifacts:
    paths:
      - werf.yaml
  dependencies:
    - Build and Publish
  only: [merge_requests]
  tags: [werf]

Stop Review:
  stage: dismiss
  script:
    - werf dismiss --with-namespace
  environment:
    name: review-${CI_MERGE_REQUEST_ID}
    action: stop
  variables:
    GIT_STRATEGY: none
  dependencies:
    - Review
  only: [merge_requests]
  when: manual
  tags: [werf]
